version: '3.9'

services:

  postgres: &pg_base
    image: postgres:16.1
    container_name: postgres_songs
    ports:
      - $POSTGRES_PORT:5432
    env_file:
      - .env
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - songs
    healthcheck:
      test: "pg_isready -d $POSTGRES_DB -U $POSTGRES_USER"
      interval: 2s
      timeout: 15s

  postgres_tests:
    <<: *pg_base
    container_name: postgres_tests_cats
    ports:
      - 5777:5432
    environment:
      - POSTGRES_DB=test_db
      - POSTGRES_USER=test_u
      - POSTGRES_PASSWORD=test_p
    volumes:
      - postgres_tests_data:/var/lib/postgresql/data

  redis:
    image: redis:7.2.4
    container_name: redis_songs
    ports:
      - $REDIS_PORT:$REDIS_PORT
    environment:
      - REDIS_PASSWORD=$REDIS_PASS
    command: [ "--maxmemory", "250mb" ]
    restart: always
    volumes:
      - redis_data:/data
    networks:
      - songs
    healthcheck:
      test: "redis-cli --raw ping"
      interval: 2s
      timeout: 15s

  backend:
    image: backend_image_songs
    build:
      context: .
    container_name: backend_songs
    env_file:
      - .env
    entrypoint: sh "scripts/backend_app.sh"
    ports:
      - $BACKEND_PORT:$BACKEND_PORT
    depends_on:
      postgres:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: always
    volumes:
      - backend_data:/backend_app/static/media
      - ./logs:/backend_app/logs
    networks:
      - songs

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.15.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ELASTIC_USERNAME=elastic
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - xpack.security.enabled=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    restart: always
    ports:
      - "9200:9200"
    networks:
      - songs
    healthcheck:
      test: curl -u elastic:elastic -s -f elasticsearch:9200/_cat/health >/dev/null || exit 1
      interval: 30s
      timeout: 10s
      retries: 5


  kibana:
    image: docker.elastic.co/kibana/kibana:7.15.0
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=${ELASTIC_PASSWORD}
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - songs

  filebeat:
    build:
        context: ./filebeat
    container_name: filebeat
    volumes:
        - ./logs:/backend_app/logs
    environment:
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=${ELASTIC_PASSWORD}
    depends_on:
        - elasticsearch
        - kibana
    networks:
      - songs

networks:
  songs:
    driver: bridge

volumes:
  postgres_data:
  postgres_tests_data:
  redis_data:
  backend_data:
  elasticsearch_data:
      driver: local
